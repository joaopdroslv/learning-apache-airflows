services:
  postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3306:3306"
    volumes:
      # Runs the script that builds the database when the service starts
      - ./database.sql:/docker-entrypoint-initdb.d/database.sql
    restart: always

  redis:
    image: redis:latest
    restart: always

  airflow-webserver:
    image: apache/airflow:2.7.3
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
    volumes:
      - ./dags:/opt/airflow/dags  # Monta o diretório local das DAGs para dentro do container
      - ./logs:/opt/airflow/logs  # Para persistir logs
      - ./config:/opt/airflow/config  # Para persistir config
      - ./config/airflow.cfg:/opt/airflow/airflow.cfg  # Para persistir airflow.cfg
    ports:
      - "8080:8080"
    command: >
      bash -c "airflow db upgrade &&
               airflow users create --username admin --password admin --firstname Airflow --lastname Admin --role Admin --email admin@example.com &&
               airflow webserver"

  airflow-scheduler:
    image: apache/airflow:2.7.3
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
    volumes:
      - ./dags:/opt/airflow/dags  # Monta o diretório local das DAGs para dentro do container
      - ./logs:/opt/airflow/logs  # Para persistir logs
      - ./config:/opt/airflow/config  # Para persistir config
      - ./config/airflow.cfg:/opt/airflow/airflow.cfg  # Para persistir airflow.cfg
    command: > 
      bash -c "airflow variables import /opt/airflow/config/variables.json && airflow scheduler"

  airflow-worker:
    image: apache/airflow:2.7.3
    restart: always
    depends_on:
      - airflow-scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
    volumes:
      - ./dags:/opt/airflow/dags  # Monta o diretório local das DAGs para dentro do container
      - ./logs:/opt/airflow/logs  # Para persistir logs
      - ./config:/opt/airflow/config  # Para persistir config
      - ./config/airflow.cfg:/opt/airflow/airflow.cfg  # Para persistir airflow.cfg
    command: airflow celery worker

volumes:
  postgres_data:
